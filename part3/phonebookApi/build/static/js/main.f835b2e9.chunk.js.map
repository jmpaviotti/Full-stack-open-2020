{"version":3,"sources":["components/Notification.js","components/Filter.js","components/EntryForm.js","components/Persons.js","services/persons.js","App.js","index.js"],"names":["Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","Filter","value","handler","onChange","EntryForm","name","number","nameHandler","numberHandler","formHandler","onSubmit","type","Person","entry","onClick","Persons","array","map","el","key","baseUrl","axios","get","then","response","data","post","id","put","delete","App","useState","persons","setPersons","setMessage","messageColor","setMessageColor","filter","setFilter","newName","setNewName","newNumber","setNewNumber","personsToShow","person","toLowerCase","indexOf","useEffect","personService","baseData","event","target","preventDefault","newEntry","isUnique","find","window","confirm","returnedEntry","setTimeout","catch","error","concat","returned","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f835b2e9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Notification = ({ message, color }) => {\r\n  const style = {\r\n    color,\r\n    background: 'lightgrey',\r\n    fontSize: 20,\r\n    borderStyle: 'solid',\r\n    borderRadius: 5,\r\n    padding: 10,\r\n    marginBottom: 10,\r\n  };\r\n\r\n  if (message === null) {\r\n    return null;\r\n  }\r\n\r\n  return <div style={style}>{message}</div>;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\n\r\nconst Filter = ({ value, handler }) => {\r\n  return (\r\n    <div>\r\n      Filter shown with <input value={value} onChange={handler} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\n\r\nconst EntryForm = ({\r\n  name,\r\n  number,\r\n  nameHandler,\r\n  numberHandler,\r\n  formHandler,\r\n}) => {\r\n  return (\r\n    <form onSubmit={formHandler}>\r\n      <div>\r\n        name: <input value={name} onChange={nameHandler} />\r\n      </div>\r\n      <div>\r\n        number: <input value={number} onChange={numberHandler} />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default EntryForm;\r\n","import React from 'react';\r\n\r\nconst Person = ({ entry, handler }) => {\r\n  return (\r\n    <div>\r\n      {entry.name} {entry.number}{' '}\r\n      <button onClick={() => handler(entry)}>delete</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst Persons = ({ array, handler }) => {\r\n  return (\r\n    <div>\r\n      {array.map((el) => (\r\n        <Person key={el.name} entry={el} handler={handler} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/persons';\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst add = (entry) => {\r\n  const request = axios.post(baseUrl, entry);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst update = (entry, id) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, entry);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`);\r\n  return request.then((response) => response.data);\r\n};\r\n\r\nexport default { getAll, add, update, remove };\r\n","import React, { useState, useEffect } from 'react';\nimport Notification from './components/Notification';\nimport Filter from './components/Filter';\nimport EntryForm from './components/EntryForm';\nimport Persons from './components/Persons';\nimport personService from './services/persons';\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [message, setMessage] = useState(null);\n  const [messageColor, setMessageColor] = useState('');\n  const [filter, setFilter] = useState('');\n  const [newName, setNewName] = useState('');\n  const [newNumber, setNewNumber] = useState('');\n\n  // Search bar functions\n  const handleFilterChange = (event) => {\n    setFilter(event.target.value.toLowerCase());\n  };\n\n  const personsToShow = persons.filter(\n    (person) => person.name.toLowerCase().indexOf(filter) !== -1\n  );\n\n  // Input Form functions\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n\n  const addEntry = (event) => {\n    event.preventDefault();\n    const newEntry = { name: newName, number: newNumber };\n    const isUnique = persons.find((el) => el.name === newEntry.name);\n\n    if (isUnique) {\n      const id = isUnique.id;\n      if (\n        window.confirm(\n          `${newName} is already in phonebook, do you want to replace the old phone number with a new one?`\n        )\n      ) {\n        personService\n          .update(newEntry, id)\n          .then((returnedEntry) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== id ? person : returnedEntry\n              )\n            );\n            setMessageColor('green');\n            setMessage(`Updated ${newEntry.name}`);\n            setTimeout(() => {\n              setMessage(null);\n            }, 5000);\n            setNewName('');\n            setNewNumber('');\n          })\n          .catch((error) => {\n            setMessageColor('red');\n            setMessage(\n              `Entry for '${newEntry.name}' has already been removed from server`\n            );\n            setTimeout(() => {\n              setMessage(null);\n            }, 5000);\n            setPersons(persons.filter((el) => el.id !== id));\n          });\n      }\n    } else {\n      personService\n        .add(newEntry)\n        .then((returnedEntry) => {\n          setPersons(persons.concat(returnedEntry));\n          setMessageColor('green');\n          setMessage(`Added ${newEntry.name}`);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n          setNewName('');\n          setNewNumber('');\n        })\n        .catch((error) => {\n          setMessageColor('red');\n          setMessage(error.response.data.error);\n          setTimeout(() => {\n            setMessage(null);\n          }, 5000);\n        });\n    }\n  };\n\n  // Handler for removing a single person\n  const removePersonHandler = (person) => {\n    if (window.confirm(`Delete ${person.name}?`)) {\n      personService.remove(person.id).then((returned) => {\n        setPersons(persons.filter((el) => el.id !== person.id));\n      });\n    }\n  };\n\n  // Fetch initial data\n  useEffect(() => {\n    personService.getAll().then((baseData) => {\n      setPersons(baseData);\n    });\n  }, []);\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={message} color={messageColor} />\n\n      <Filter value={filter} handler={handleFilterChange} />\n\n      <h2>Add new</h2>\n\n      <EntryForm\n        name={newName}\n        number={newNumber}\n        nameHandler={handleNameChange}\n        numberHandler={handleNumberChange}\n        formHandler={addEntry}\n      />\n\n      <h2>Numbers</h2>\n\n      <Persons array={personsToShow} handler={removePersonHandler} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}